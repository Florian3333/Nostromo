                                              # This project is not finished this a copy draft of my last personal project
import sqlite3
import os
import qrcode
from PIL import Image
import random

p = "C://Users//Aquaman//Desktop//mon application//jardin.db"

tag = os.path.exists(p)
connexion = sqlite3.connect(p) 
cursor = connexion.cursor()

# Part for the employees:
if not tag:
    cursor.execute("""CREATE TABLE jardin (ID INTEGER PRIMARY KEY, item VARCHAR, price INTEGER);""")

pro_client = input("pro space (put pro) or client space (put client)")

if pro_client == "pro":         
    while True:
        password = input('Tape your professionnal ID please')
        if password == "aquaman" or password == "superman":
            print("your professionnal ID is correct !!")
            break
        print("your Pro ID is not correct do it again !!!")
    while True:
        item, price = input("to add the item name plus its price add name in first separated by a space for the price: (to stop tape the code (stop 1)), to cancel one item put (cancel)").split()
        if item == "cancel" and price =="1":
            number_canceled = input("what is the number of the item you wish to cancel")
            cursor.execute("DELETE FROM jardin WHERE id=?", (number_canceled,))
        elif item == "list" and price == "1":
            cursor.execute("SELECT * FROM jardin")
            resultats = cursor.fetchall()
            for i in resultats:
                print(i)
        elif item == "stop" and price == "1":
            break
        else:
            cursor.execute('INSERT INTO jardin (item, price) VALUES (?, ?)', (item, price))
            connexion.commit()
    connexion.close()
    print("commercial operation finished !!")
    exit(0)

# part for client

if pro_client == "client":
    connexion = sqlite3.connect(p) 
    cursor = connexion.cursor()

    cursor.execute("SELECT * FROM jardin")
    resultats = tuple(cursor.fetchall())
    list_shop = []
    for i in resultats:
        print(i)
        list_shop.append(i)

    list_client = []
    total_price = 0
    while True:
        instruction_client = input('''to add on the basket put the number associated to the list (put finish to stop the listing), if cancel one article (press cancel, for list your choice (make list))''')
        for i in range(len(list_shop)):
            if instruction_client == str(list_shop[i][0]):
                list_client.append('ID=' + str(list_shop[i][0]) + ', ' + str(list_shop[i][1]) + " price: "+ str(list_shop[i][2]) + "euros " + "\n")
                total_price += list_shop[i][2]

        if instruction_client == "finish":
            break
        if instruction_client == "cancel":
            cancellation_item= input("ID= of the item you wish to cancel from the list (just put number)?")
            for element in list_client:
                if cancellation_item in element:
                    list_client.remove(element)
                    cursor.execute(f"SELECT price FROM jardin WHERE ID = {cancellation_item}")
                    amount_price_cancelation = cursor.fetchone()
                    total_price-= amount_price_cancelation[0]
        if instruction_client == "list":
            for i in list_client:
                print(i)

                       
connexion.close()
print("your shoppinp list if the following one:", list_client, end=' ')
print("for a total of " + str(total_price)+ " Euros")

list_str = ''
for i in range(len(list_client)):
    list_str += str(list_client[i])



# Créer un objet de code QR
qr = qrcode.QRCode(
    version=1,
    error_correction=qrcode.constants.ERROR_CORRECT_L,
    box_size=10,
    border=4,
)

# Ajouter les données au code QR
data = list_str
qr.add_data(data + str("\n Total = " + str(total_price)))

# Générer le code QR
qr.make(fit=True)

# Créer une image du code QR
img = qr.make_image(fill_color="black", back_color="white")

nombre_aleatoire = str(random.randint(1, 100))
# Enregistrer l'image dans un fichier
img.save(f'C://Users//Aquaman//Desktop//mon application//qrcode{nombre_aleatoire}.png')


# Charger l'image du code QR
img = Image.open("qrcode.png")

# Afficher l'image du code QR
img.show()

